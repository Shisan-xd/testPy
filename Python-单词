
    lower()     # 全部小写              语法：变量名／字符串序列.lower()
    upper()     # 全部大写
    title()     # 首字母大写
    append()    #在列表末尾添加一个元素    语法：变量名／字符串序列.append('添加内容')
    del         #删除列表里第一个元素      语法：motorycles[0]

删除空白：
    rstrip()    #rstrip 踢除右边的空白
    lstrip()    #lstrip 剔除左边的空白
    strip()     #strip 剔除左右空白

打印、输入、导入
		print()	打印  
		end=''	打印结束,引号内不放字符表示不换行展示
		input()	输入	
		import()导入

字符串：
		ord()函数获取字符的整数表示，例：print(ord('旺'))
		chr()函数把编码转换为对应的字符，例：print(chr(25991))
		len()函数计算的是的字符数,例：print(len(b'43214')) 
		encode()函数计算的是中文的字符数,例：print(len('旺仔俱乐部'.encode('utf-8')))

格式化：
		%是用来格式化字符串的。
		%s表示用字符串替换
		%d表示用整数替换
		%f	浮点数
		%s	字符串
		%x	十六进制整数
		format()
		另一种格式化字符串的方法是使用字符串的format()方法，它会用传入的参数依次替换字符串内的占位符{0}、{1}……，不过这种方式写起来比%要麻烦得多
		f-string
		最后一种格式化字符串的方法是使用以f开头的字符串，称之为f-string，它和普通字符串不同之处在于，字符串如果包含{xxx}，就会以对应的变量替换

转换数据类型：
		int()	整型
		float()	小数
		str()	字符串 
		list()	列表
		tuple()	元组
		eval()	原本的数据类型

包名：
        random	随机数	格式：random.randint(开始，结束)

条件语句：
		if…else…
		if…elif…

循环：
		whlie	循环
		break	终止此循环（当某些条件成立）
		continue	推出当前一次循环继而执行下一次循环代码

字符串-查找：
        find(): 检测某个子串是否包含在这个字符串中，如果在返回这个子串开始的位置下标，否则则返回-1
        rfind()：查找方向从右开始
        index()：检测某个子串是否包含在这个字符串中，如果在返回这个子串开始的位置下标，否则则报异常
        rindex()：查找方向从右开始
        count()：返回某个子串在字符串中出现的次数（统计出现的次数）

字符串-修改：
        replace()：替换
        split()：按照指定字符分割字符串







